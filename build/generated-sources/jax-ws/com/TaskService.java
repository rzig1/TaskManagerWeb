
package com;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TaskService", targetNamespace = "http://com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TaskService {


    /**
     * 
     * @param idusers
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserTasks", targetNamespace = "http://com/", className = "com.GetUserTasks")
    @ResponseWrapper(localName = "getUserTasksResponse", targetNamespace = "http://com/", className = "com.GetUserTasksResponse")
    @Action(input = "http://com/TaskService/getUserTasksRequest", output = "http://com/TaskService/getUserTasksResponse")
    public List<String> getUserTasks(
        @WebParam(name = "idusers", targetNamespace = "")
        int idusers);

    /**
     * 
     * @param idtask
     * @param idusers
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUserTask", targetNamespace = "http://com/", className = "com.DeleteUserTask")
    @ResponseWrapper(localName = "deleteUserTaskResponse", targetNamespace = "http://com/", className = "com.DeleteUserTaskResponse")
    @Action(input = "http://com/TaskService/deleteUserTaskRequest", output = "http://com/TaskService/deleteUserTaskResponse")
    public boolean deleteUserTask(
        @WebParam(name = "idtask", targetNamespace = "")
        int idtask,
        @WebParam(name = "idusers", targetNamespace = "")
        int idusers);

    /**
     * 
     * @param idtask
     * @param hour
     * @param idusers
     * @param dueDate
     * @param title
     * @param status
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateUserTask", targetNamespace = "http://com/", className = "com.UpdateUserTask")
    @ResponseWrapper(localName = "updateUserTaskResponse", targetNamespace = "http://com/", className = "com.UpdateUserTaskResponse")
    @Action(input = "http://com/TaskService/updateUserTaskRequest", output = "http://com/TaskService/updateUserTaskResponse")
    public boolean updateUserTask(
        @WebParam(name = "idtask", targetNamespace = "")
        int idtask,
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "status", targetNamespace = "")
        String status,
        @WebParam(name = "due_date", targetNamespace = "")
        String dueDate,
        @WebParam(name = "hour", targetNamespace = "")
        String hour,
        @WebParam(name = "idusers", targetNamespace = "")
        int idusers);

    /**
     * 
     * @param hour
     * @param idusers
     * @param dueDate
     * @param title
     * @param status
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createTask", targetNamespace = "http://com/", className = "com.CreateTask")
    @ResponseWrapper(localName = "createTaskResponse", targetNamespace = "http://com/", className = "com.CreateTaskResponse")
    @Action(input = "http://com/TaskService/createTaskRequest", output = "http://com/TaskService/createTaskResponse")
    public boolean createTask(
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "status", targetNamespace = "")
        String status,
        @WebParam(name = "due_date", targetNamespace = "")
        String dueDate,
        @WebParam(name = "hour", targetNamespace = "")
        String hour,
        @WebParam(name = "idusers", targetNamespace = "")
        int idusers);

}
